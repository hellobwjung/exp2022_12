/*
 * day10_EX_8퍼즐A_user_STL_ver1_2.cpp
 *
 *  Created on: 2022. 12. 20.
 *      Author: bw
 */

#include <unordered_map>
using namespace std;

struct Data {
  int face, zeroPos, prevHmapIdx, dir;
} queue[9 * 8 * 7 * 6 * 5 * 4 * 3];
int fr, re;

//  FACE         idx
// 1 2 3        0 1 2
// 4 5 6        3 4 5
// 7 8 0        6 7 8
//
// DIR
//             up  0(00)
// left 2(10)              right3 (11)
//            down 1(01)

int adjIdx[9][5] = { { 1, 3 }, { 0, 2, 4 }, { 1, 5 }, //
    { 0, 4, 7 }, { 1, 3, 5, 7 }, { 2, 4, 8 }, //
    { 3, 7 }, { 4, 6, 8 }, { 5, 7 } };

const int U = 0, D = 1, L = 2, R = 3;
int dir[9][5] = { { L, U }, { R, L, U }, { L, D }, //
    { U, R, D }, { U, L, R, D }, { U, L, D }, //
    { U, R }, { U, L, R }, { U, L } };

unordered_map<int, int> hmap;
int puz;

void BFS() {
  Data d = { 123456780, 8 };
  hmap[123456780] = 0; // 0번째, 즉, 제일 처음에, 넣는다, 여기까지 오면 길 찾는거임.
}

void test(const int puzzle[3][3]) {

  if (re == 0) {
    BFS();
  }

  puz = 0;
  for (int y = 0; y < 3; y++) {
    for (int x = 0; x < 3; x++) {
      puz = puz * 10 + puzzle[y][x];
    }
  }

}
